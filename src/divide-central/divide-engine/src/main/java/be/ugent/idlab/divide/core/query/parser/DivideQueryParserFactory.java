package be.ugent.idlab.divide.core.query.parser;

public class DivideQueryParserFactory {

    private static IDivideQueryParser instance;

    /**
     * @param processUnmappedVariableMatchesInParser boolean representing whether variable
     *                                               matches in the input for the DIVIDE query
     *                                               parser that are not defined as mappings,
     *                                               should be considered as mappings by default
     * @param validateUnboundVariablesInRspQlQueryBody boolean representing whether variables in
     *                                                 the RSP-QL query body generated by this
     *                                                 parser, should be validated (= checked for
     *                                                 occurrence in the WHERE clause of the query
     *                                                 or in the set of input variables that will
     *                                                 be substituted during the DIVIDE query
     *                                                 derivation)
     * @return the DIVIDE query parser for this system runtime
     */
    public static synchronized IDivideQueryParser getInstance(
            boolean processUnmappedVariableMatchesInParser,
            boolean validateUnboundVariablesInRspQlQueryBody) {
        if (instance == null) {
            instance = new DivideQueryParser(
                    processUnmappedVariableMatchesInParser,
                    validateUnboundVariablesInRspQlQueryBody);
        }
        return instance;
    }

}
